name: make_freetz

on:
 workflow_dispatch:

jobs:
  build:
    container:
      image: ubuntu:20.04
    runs-on: ubuntu-latest

    steps:

      - name: update
        run: apt-get -y update && apt-get -y upgrade && apt-get -y dist-upgrade

      - name: install
        run: |
          DEBIAN_FRONTEND=noninteractive apt-get -y install \
            locales \
            pv cpio rsync kmod execstack imagemagick inkscape graphicsmagick subversion git bc unar wget sudo gcc g++ binutils autoconf automake \
            autopoint libtool-bin make bzip2 libncurses5-dev libreadline-dev zlib1g-dev flex bison patch texinfo tofrodos gettext pkg-config ecj \
            fastjar perl libstring-crc32-perl ruby gawk python libusb-dev unzip intltool libacl1-dev libcap-dev libc6-dev-i386 lib32ncurses5-dev \
            gcc-multilib bsdmainutils lib32stdc++6 libglib2.0-dev ccache cmake lib32z1-dev libsqlite3-dev sqlite3 libzstd-dev

      - name: locale
        run: locale-gen en_US.utf8 && locale-gen de_DE.UTF-8 && update-locale

      - name: clone
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          umask 0022
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git clone https://github-actions:$GITHUB_TOKEN@${GITHUB_SERVER_URL##*/}/$GITHUB_REPOSITORY.git $GITHUB_WORKSPACE --branch $GITHUB_REF_NAME

      - name: config
        run: |
          truncate -s0 .config
          for x in USER_LEVEL_APTGURU TYPE_7490 TYPE_FIRMWARE_DETECT_LATEST; do echo "FREETZ_$x=y"  >> .config; done
          for x in PACKAGE_LDD PACKAGE_STRACE ; do echo "FREETZ_$x=y"                               >> .config; done
          for x in PACKAGE_DROPBEAR TOOLCHAIN_CCACHE; do echo "# FREETZ_$x is not set"              >> .config; done
          echo 'FREETZ_DL_SITE_USER="https://github.com/Freetz-NG/dl-mirror/raw/master"'            >> .config
          echo 'FREETZ_VERBOSITY_LEVEL=2'                                                           >> .config
          echo 'FREETZ_JLEVEL=9'                                                                    >> .config

      - name: addon
        run: |
          echo "################################################################"
          wget -q "https://${{ secrets.ACTIONS_ADDSURL }}/add" -O 2>/dev/null | tar xvj "$MKT" 2>/dev/null || true

      - name: signature
        run: |
          mkdir -p $HOME/.freetz-signature
          for x in prv pub; do wget -q "https://${{ secrets.ACTIONS_ADDSURL }}/$x" -O $HOME/.freetz-signature/$x >/dev/null 2>&1 || rm -f $HOME/.freetz-signature/$x; done
          echo "################################################################" && ls -l $HOME/.freetz-signature/

      - name: generate
        run: |
          mkdir -p $HOME/.freetz-dl && useradd -m freetz -s $(which bash) && chown freetz . $HOME/.freetz-dl $HOME/.freetz-signature -R
          su freetz -c "umask 0022 && make olddefconfig && make"

      - name: result
        run: |
          echo "################################################################"
          rm -f images/latest.image
          ls -l images/

      - name: vars
        id: vars
        run: |
          LINK="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          LAST="$(ls images/*.image | sed 's,.*/,,;s,\.image$,,')"
          NAME="$(ls images/*.image | sed 's,.*/,,;s,_[0-9].*,,')"
          [ -n "$LINK" ] && echo "::set-output name=link::$LINK"
          [ -n "$LAST" ] && echo "::set-output name=last::$LAST"
          [ -n "$NAME" ] && echo "::set-output name=name::$NAME"
          echo "################################################################"
          echo "LINK=$LINK"
          echo "LAST=$LAST"
          echo "NAME=$NAME"

      - name: cleanup
        uses: dev-drprasad/delete-older-releases@v0.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          delete_tag_pattern: ${{ steps.vars.outputs.name }}
          delete_tags: true
          keep_latest: 0

      - name: release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.vars.outputs.name }}
          name: ${{ steps.vars.outputs.last }}
          body: ${{ steps.vars.outputs.link }}
          prerelease: false
          artifactErrorsFailBuild: true
          artifacts: "images/*"
          token: ${{ secrets.GITHUB_TOKEN }}


