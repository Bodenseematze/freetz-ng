TOOLS_CC:=gcc
TOOLS_CXX:=g++
TOOLS_CFLAGS:=-Wall -O2
TOOLS_CXXFLAGS:=-Wall -O2
TOOLS_LDFLAGS:=

# bitness of the build system (also the host system)
# heuristic: if "uname -m" contains 64 then it's a 64-bit system, 32-bit otherwise
HOST_BITNESS:=$(if $(findstring 64,$(shell uname -m)),64,32)
# on 32-bit systems no special CFLAGS are required, on all other systems use -m32 [ and hope it's supported :-) aarch64 does not :{ ]
HOST_CFLAGS_FORCE_32BIT_CODE:=$(if $(filter-out 32,$(HOST_BITNESS)),-m32)

TOOLS_SOURCE_DIR:=$(FREETZ_BASE_DIR)/source/host-tools
HOST_TOOLS_DIR:=$(FREETZ_BASE_DIR)/$(TOOLS_BUILD_DIR)

$(TOOLS_SOURCE_DIR) $(HOST_TOOLS_DIR):
	@mkdir -p $@

TOOLS:=$(sort $(basename $(notdir $(wildcard $(TOOLS_DIR)/make/*/*.mk))))

TOOLS_TARXZBUNDLE:=tools-host

# tools not built by default
TOOLS_CONDITIONAL:=$(TOOLS_TARXZBUNDLE)
TOOLS_CONDITIONAL+=avm-rle-host
TOOLS_CONDITIONAL+=dtc-host
TOOLS_CONDITIONAL+=gmp-host
TOOLS_CONDITIONAL+=mpc-host
TOOLS_CONDITIONAL+=mpfr-host
TOOLS_CONDITIONAL+=lzma1-host
TOOLS_CONDITIONAL+=lzma2-host
TOOLS_CONDITIONAL+=python-host
TOOLS_CONDITIONAL+=scons-host
TOOLS_CONDITIONAL+=xdelta-host
TOOLS_CONDITIONAL+=$(if $(FREETZ_STRIP_LIBRARIES),,mklibs-host)
TOOLS_CONDITIONAL+=$(if $(FREETZ_SHARE_terminfo),,ncurses-host)
TOOLS_CONDITIONAL+=$(if $(FREETZ_ROOTEMU_FAKEROOT),,fakeroot-host)
TOOLS_CONDITIONAL+=$(if $(FREETZ_ROOTEMU_PSEUDO),,pseudo-host)
TOOLS_CONDITIONAL+=$(if $(FREETZ_AVM_PROP_OUTER_FILESYSTEM_TYPE_EXT2),,e2fsprogs-host)
TOOLS_CONDITIONAL+=$(if $(FREETZ_AVM_PROP_OUTER_FILESYSTEM_TYPE_EXT2),,genext2fs-host)
TOOLS_CONDITIONAL+=$(if $(FREETZ_SEPARATE_AVM_UCLIBC),,patchelf-host)
TOOLS_CONDITIONAL+=$(if $(FREETZ_AVM_HAS_NMI_VECTOR),,sfk-host)
TOOLS_CONDITIONAL+=$(if $(FREETZ_AVM_HAS_FWLAYOUT_5),,uimg-host)
TOOLS_CONDITIONAL+=$(if $(FREETZ_AVM_HAS_FWLAYOUT_6),,fitimg-host)
TOOLS_CONDITIONAL+=$(if $(FREETZ_AVM_KERNEL_CONFIG_AREA_KNOWN),,yf-akcarea-host)
TOOLS_CONDITIONAL+=$(if $(FREETZ_PATCH_MODFS_BOOT_MANAGER),,yf-bootmanager-host)

# tools not in dl-archive
TOOLS_BUILD_LOCAL:=$(TOOLS_TARXZBUNDLE)
TOOLS_BUILD_LOCAL+=gmp-host
TOOLS_BUILD_LOCAL+=kconfig-host
TOOLS_BUILD_LOCAL+=mpc-host
TOOLS_BUILD_LOCAL+=mpfr-host
TOOLS_BUILD_LOCAL+=scons-host

# until next host-tools update
#TOOLS_BUILD_LOCAL+=...


TOOLS_SUBMAKE=cmd() { $(MAKE) $(QUIET) "$$@" $(SILENT) || { $(call ERROR,1,$(BUILD_FAIL_MSG)) } }; $(call _ECHO,building) cmd


### TOOLS_INIT
#   $(1) = version (mandatory)
#   $(2) = lower-case tool name (optional)
#   $(3) = upper-case tool name (optional)
define TOOLS_INIT__INT

PKG_TYPE:=HTL
PKG_MAKEFILE:=$(word $(words $(MAKEFILE_LIST)),$(MAKEFILE_LIST))
PKG_BASENAME:=$(basename $(notdir $(PKG_MAKEFILE)))

$(if $(strip $1),,$(error Undefined version for TOOLS_INIT in $(PKG_MAKEFILE)))
pkg:=$(if $(strip $2),$(strip $2),$(PKG_BASENAME))
PKG:=$(if $(strip $3),$(strip $3),$(call TOUPPER_NAME,$(pkg)))
pkg_short:=$(patsubst %-host,%,$(pkg))

$(PKG)_VERSION:=$(strip $1)
$(PKG)_MAKE_DIR:=$(TOOLS_DIR)/make/$(pkg)
$(PKG)_DIR:=$(TOOLS_SOURCE_DIR)/$(pkg_short)-$($(PKG)_VERSION)
$(PKG)_SRC:=$($(PKG)_MAKE_DIR)/src

$(PKG)_DEPENDS_ON:=$(UNPACK_TARBALL_PREREQUISITES)

$(pkg)-precompiled: $(pkg)-precompiled--int clear-echo-temporary

endef
define TOOLS_INIT__INTV
$(value TOOLS_INIT__INT)
endef
define TOOLS_INIT
$(eval $(call TOOLS_INIT__INTV,$1,$2,$3))
endef


### TOOLS_FINISH
define TOOLS_FINISH__INT

$(pkg)-precompiled--int: $(patsubst %,%-precompiled,$($(PKG)_DEPENDS_ON))
.PHONY: $(pkg)-precompiled--int


PKG_TYPE:=
PKG_MAKEFILE:=
PKG_BASENAME:=

pkg:=
PKG:=
pkg_short:=

endef
TOOLS_FINISH=$(eval $(TOOLS_FINISH__INT))


