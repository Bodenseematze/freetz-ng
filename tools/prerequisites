#!/bin/bash
SCRIPT="$(readlink -f $0)"
PARENT="$(dirname ${SCRIPT%/*})"
PACKAGES="$PARENT/docs/PREREQUISITES/packages"
[ "$1" == '-y' ] && shift && doy="-y" || doy=""
ARG="$1"

check_requisite() {
	case "$2" in
		pkgconf)
			[ -n "$(find /usr/lib*/pkgconfig/ /usr/local/lib*/pkgconfig/ /usr/lib/*/pkgconfig/ -name "$1" 2>/dev/null)" ]
			;;
		pkgconf32)
			[ -n "$(find /usr/lib/pkgconfig/  /usr/local/lib/pkgconfig/  /usr/lib/*/pkgconfig/ -name "$1" 2>/dev/null | grep -v 'x86_64')" ]
			;;
		program)
			[ -x "$(command -v $1)" ]
			;;
		lib)
			ldconfig -p | grep -Eq "^[[:space:]]*$1(\.[01])* "
			;;
		lib32)
			ldconfig -p | grep -v 'x86-64' | grep -Eq "^[[:space:]]*$1(\.[01])* "
			;;
		header)
			[ -n "$(find /usr/include/ /usr/local/include/ -path "*/$1" 2>/dev/null)" ]
			;;
		*)
			false
			;;
	esac
}

failed_requisite() {
	case "$2" in
		pkgconf)
			echo "ERROR: The pkgconf '$1' was not found in /usr/(local/)lib*/(*/)pkgconfig/"
			;;
		pkgconf32)
			echo "ERROR: The pkgconf '$1' (32-bit) was not found in /usr/(local/)lib/(*/)pkgconfig/"
			;;
		program)
			echo "ERROR: The program '$1' was not found in path"
			;;
		lib)
			echo "ERROR: The library '$1' was not found in /etc/ld.so.cache"
			;;
		lib32)
			echo "ERROR: The library '$1' (32-bit) was not found in /etc/ld.so.cache"
			;;
		header)
			echo "ERROR: The header file '$1' was not found in /usr/(local/)include"
			;;
		*)
			echo "Unknown requisite type '$2' for '$1'."
			;;
	esac
}

makefile_internal() {
	retval=0
	while read parser file depends; do
		[ -z "$file" ] && continue
		# check dependencies
		MODE="or"
		[ "${depends%% *}" == 'and' ] && \
		  MODE="and" && \
		  depends="${depends#and }"
		depends="${depends#or }"
		[ "${#depends}" == '0' ] && mandatory='y' || mandatory='n'
		ands='y'
		for x in $depends; do
			grep -q "^$x=y$" "$PARENT/.config" 2>/dev/null && mandatory='y' || ands='n'
		done
		[ "$MODE" == "and" -a "$ands" != "y" ] && mandatory='n'
		[ "$mandatory" != 'y' ] && continue
		# check installed
		check_requisite "$file" "$parser" && continue
		failed_requisite "$file" "$parser"
		retval=1
	done < <(sed 's/#.*//g;/^[ \t]*$/d' "$PARENT/.prerequisites" 2>/dev/null)
	exit $retval
}

show_usage() {
	echo "Checks or installs prerequisites"
	echo "Usage: $0 <-y> <ARG>"
	echo "  -y: Install instantly, don't ask before"
	echo "Available linux systems for <ARG>: "
	for x in "$PACKAGES/"*; do echo "  - ${x##*/}"; done
	echo "Without <ARG> it will be tried to detect the current Linux."
	exit 1
}

detect_linux() {
	NAME="$(sed -rn 's/^NAME=//p' /etc/os-release 2>/dev/null)"
	NAME="$(echo $NAME | sed 's/"//g;s/ .*//;s/\..*//')"
	VERSION="$(sed -rn 's/^VERSION=//p' /etc/os-release 2>/dev/null)"
	VERSION="$(echo $VERSION | sed 's/"//g;s/ .*//;s/\..*//')"
	echo "$NAME$VERSION"
}

install_requisite() {
	[ ! -e "$PACKAGES/${1##*/}" ] && echo "File not found: ${1##*/}" && exit 1
	vals="$(sed 's/[\t ]*#.*//g' "$PACKAGES/${1##*/}" | sort | tr '\n' ' ' | sed 's/^ *//;s/  */ /g;s/ *$//')"
	echo "Installing these '${1##*/}' packages: $vals"
	case "${1##*/}" in
		Fedora*)                         sudo dnf --refresh  install $doy $vals ;;
		Debian*)  sudo apt-get update && sudo apt            install $doy $vals ;;
		Ubuntu*)  sudo apt-get update && sudo apt-get        install $doy $vals ;;
		*)        echo 'No known installer' ;;
	esac
}

[ "$ARG" == "makefile_internal" ] && makefile_internal
[ -z "$ARG" ] && ARG="$(detect_linux)"
[ -z "$ARG" -o "$ARG" == '-h' -o "$ARG" == '--help' ] && show_usage
install_requisite "$ARG"

